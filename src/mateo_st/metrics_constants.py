import bert_score
import comet
import sacrebleu
from sacrebleu import BLEU
from sacrebleu.metrics.bleu import _TOKENIZERS as SBTOKENIZERS


METRICS_META = {
    "bleu": {
        "name": "BLEU",
        "class": "baseline",
        "full_name": "BiLingual Evaluation Understudy",
        "description": "<p>BLEU is perhaps the most well-known MT evaluation metric. It relies on how well a machine"
        " translation's n-grams correspond to those of a reference translation. Despite its popularity,"
        " it has also been criticized for its shortcomings such as a lack of sufficiently incorporating"
        " recall (e.g., <a href='https://aclanthology.org/E06-1032'"
        " title='Callison-Burch, Osborne, Koehn criticism on BLEU'>[1]</a>).</p>",
        "paper_url": "https://aclanthology.org/P02-1040/",
        "implementation": "<p><a href='https://github.com/mjpost/sacrebleu' title='SacreBLEU GitHub'>SacreBLEU</a></p>",
        "default": True,
        "higher_better": True,
        "evaluate_name": "sacrebleu",
        "version": sacrebleu.__version__,
        "options": {
            "smooth_method": {
                "description": "Smoothing method to use",
                "default": "exp",
                "choices": ("floor", "add-k", "exp", "none"),
            },
            "smooth_value": {
                "description": "Smoothing value for `floor` and `add-k` methods. An empty value falls back to the default value",
                "default": "",
                "types": [float],
                # Because we need to allow empty values in the interface. Therefore, we need to explicitly cast to float
                # when using the resulting session_state variable!
                "force_str": True,
            },
            "lowercase": {"description": "Whether to lowercase the data", "default": False, "types": [bool]},
            "tokenize": {
                "description": "Tokenizer to use",
                "default": BLEU.TOKENIZER_DEFAULT,
                "choices": tuple(SBTOKENIZERS.keys()),
            },
        },
        "requires_source": False,
    },
    "chr_f": {
        "name": "ChrF",
        "class": "baseline",
        "full_name": "Character F-score",
        "description": "<p>ChrF uses the F-score statistic for character n-gram matches. It therefore focuses on"
        " characters rather than words. It has shown to be a strong baseline, often outperforming other"
        " baselines like BLEU or TER. By default, up to character 6-grams are considered.</p>",
        "paper_url": "https://aclanthology.org/W15-3049",
        "implementation": "<p><a href='https://github.com/mjpost/sacrebleu' title='SacreBLEU GitHub'>SacreBLEU</a></p>",
        "default": True,
        "higher_better": True,
        "evaluate_name": "chrf",
        "version": sacrebleu.__version__,
        "options": {},
        "requires_source": False,
    },
    "ter": {
        "name": "TER",
        "class": "baseline",
        "full_name": "Translation Edit Rate",
        "description": "TER is an intuitive baseline metric that formulates MT quality as the number of edits required"
        " to change an MT translation so that it exactly matches a reference translation. The possible"
        " edit operations are insertions, deletions, substitutions of words as well as word sequence"
        " ('phrase') shifts.</p>",
        "paper_url": "https://aclanthology.org/2006.amta-papers.25/",
        "implementation": "<p><a href='https://github.com/mjpost/sacrebleu' title='SacreBLEU GitHub'>SacreBLEU</a></p>",
        "default": True,
        "higher_better": False,
        "evaluate_name": "ter",
        "version": sacrebleu.__version__,
        "options": {},
        "requires_source": False,
    },
    "bertscore": {
        "name": "BERTScore",
        "class": "neural",
        "full_name": "",
        "description": "BERTScore is an automatic evaluation metric for text generation that computes similarity scores"
        " for each token in the machine translation with each token in the reference translation. These"
        " similarity scores are based on contextual embeddings retrieved from a"
        " <a href='https://aclanthology.org/N19-1423/' title='BERT paper'>BERT</a>"
        " language model.</p>",
        "paper_url": "https://openreview.net/forum?id=SkeHuCVFDr",
        "implementation": "<p><a href='https://github.com/Tiiiger/bert_score' title='BertScore GitHub'"
        ">BERTScore</a>. <a href='https://github.com/Tiiiger/bert_score#default-behavior'"
        " title='Default BERTScore behavior'>The underlying model</a> depends on the target language"
        " of your example.</p>",
        "default": False,
        "higher_better": True,
        "evaluate_name": "bertscore",
        "version": bert_score.__version__,
        "options": {},
        "requires_source": False,
    },
    "bleurt": {
        "name": "BLEURT",
        "class": "neural",
        "full_name": "Bilingual Evaluation Understudy with Representations from Transformers",
        "description": "BLEURT utilizes large language models <a href='https://aclanthology.org/N19-1423/'"
        " title='BERT paper'>BERT</a> and"
        " <a href='https://openreview.net/forum?id=xpFFI_NtgpW' title='RemBERT paper'"
        ">RemBERT</a> to compare a machine translation to a reference translation."
        " In their work, they highlight that most of their improvements are thanks to using synthetic"
        " data and pretraining on many different tasks such as back translation, entailment, and"
        " predicting existing MT metrics such as BLEU and BERTScore.</p>",
        "paper_url": "https://aclanthology.org/2020.acl-main.704/",
        "implementation": "<p><a href='https://github.com/google-research/bleurt' title='BLEURT GitHub'>BLEURT</a>."
        " We use the <code>BLEURT-20</code> checkpoint in this demo.</p>",
        "default": False,
        "higher_better": True,
        "evaluate_name": "bleurt",
        "version": None,
        "options": {},
        "requires_source": False,
    },
    "comet": {
        "name": "COMET",
        "class": "neural",
        "full_name": "Crosslingual Optimized Metric for Evaluation of Translation",
        "description": "COMET is similar to other neural approaches in that it also finetunes existing language models, "
        " in their case"
        " <a href='https://aclanthology.org/2020.acl-main.747/' title='XLM-R paper'>XLM-R</a>. What"
        " makes COMET different, however, is that it can also consider the source text as part of the"
        " input rather than only comparing a machine translation to a reference translation.</p>",
        "paper_url": "https://aclanthology.org/2020.emnlp-main.213/",
        "implementation": "<p><a href='https://github.com/Unbabel/COMET' title='COMET GitHub'>COMET</a>."
        " We use the default <code>wmt20-comet-da</code> checkpoint in this demo.</p>",
        "default": True,
        "higher_better": True,
        "evaluate_name": "comet",
        "version": comet.__version__,
        "options": {},
        "requires_source": True,
    },
}

DEFAULT_METRICS = {k for k, d in METRICS_META.items() if d["default"]}
BASELINE_METRICS = {k for k, d in METRICS_META.items() if d["class"] == "baseline"}

SUPPORTED_LANGS = {
    "bertscore": {
        "Afrikaans": "af",
        "Albanian": "sq",
        "Arabic": "ar",
        "Aragonese": "an",
        "Armenian": "hy",
        "Asturian": "ast",
        "Azerbaijani": "az",
        "Bangla": "bn",
        "Bashkir": "ba",
        "Basque": "eu",
        "Bavarian": "bar",
        "Belarusian": "be",
        "Bishnupriya Manipuri": "bpy",
        "Bosnian": "bs",
        "Breton": "br",
        "Bulgarian": "bg",
        "Burmese": "my",
        "Catalan; Valencian": "ca",
        "Cebuano": "ceb",
        "Chechen": "ce",
        "Chinese": "zh",
        "Chuvash": "cv",
        "Croatian": "hr",
        "Czech": "cs",
        "Danish": "da",
        "Dutch; Flemish": "nl",
        "English": "en",
        "Estonian": "et",
        "Filipino": "tl",
        "Finnish": "fi",
        "French": "fr",
        "Galician": "gl",
        "Georgian": "ka",
        "German": "de",
        "Greeek": "el",
        "Gujarati": "gu",
        "Haitian; Haitian Creole": "ht",
        "Hebrew": "he",
        "Hindi": "hi",
        "Hungarian": "hu",
        "Icelandic": "is",
        "Ido": "io",
        "Indonesian": "id",
        "Irish": "ga",
        "Italian": "it",
        "Japanese": "ja",
        "Javanese": "jv",
        "Kannada": "kn",
        "Kazakh": "kk",
        "Korean": "ko",
        "Kyrgyz": "ky",
        "Latin": "la",
        "Latvian": "lv",
        "Lithuanian": "lt",
        "Lombard": "lmo",
        "Low Saxon": "nds",
        "Luxembourgish; Letzeburgesch": "lb",
        "Macedonian": "mk",
        "Malagasy": "mg",
        "Malay": "ms",
        "Malayalam": "ml",
        "Marathi": "mr",
        "Minangkabau": "min",
        "Nepali": "ne",
        "Newar": "new",
        "Norwegian (Bokmal)": "nob",
        "Norwegian (Nynorsk)": "nno",
        "Occitan": "oc",
        "Panjabi; Punjabi": "pa",
        "Persian": "fa",
        "Piedmontese": "pms",
        "Polish": "pl",
        "Portuguese": "pt",
        "Romanian; Moldavian; Moldovan": "ro",
        "Russian": "ru",
        "Scots": "sco",
        "Serbian": "sr",
        "Serbo-Croatian": "hbs",
        "Sicilian": "scn",
        "Slovak": "sk",
        "Slovenian": "sl",
        "South Azerbaijani": "aze",
        "Spanish": "es",
        "Sundanese": "su",
        "Swahili": "sw",
        "Swedish": "sv",
        "Tajik": "tg",
        "Tamil": "ta",
        "Tatar": "tt",
        "Telugu": "te",
        "Turkish": "tr",
        "Ukrainian": "uk",
        "Urdu": "ur",
        "Uzbek": "uz",
        "Vietnamese": "vi",
        "Volap√ºk": "vo",
        "Waray-Waray": "war",
        "Welsh": "cy",
        "Western Frisian": "fy",
        "Western Punjabi": "lah",
        "Yoruba": "yo",
    },
    "bleurt": {
        "Afrikaans": "af",
        "Albanian": "sq",
        "Amharic": "am",
        "Arabic": "ar",
        "Armenian": "hy",
        "Azerbaijani": "az",
        "Bangla": "bn",
        "Basque": "eu",
        "Belarusian": "be",
        "Bulgarian": "bg",
        "Bulgarian (romanized)": "bg-Latn",
        "Burmese": "my",
        "Catalan; Valencian": "ca",
        "Cebuano": "ceb",
        "Central Khmer": "km",
        "Chinese": "zh",
        "Chinese (romanized)": "zh-Latn",
        "Corsican": "co",
        "Czech": "cs",
        "Danish": "da",
        "Dutch; Flemish": "nl",
        "English": "en",
        "Esperanto": "eo",
        "Estonian": "et",
        "Filipino": "fil",
        "Finnish": "fi",
        "French": "fr",
        "Gaelic; Scottish Gaelic": "gd",
        "Galician": "gl",
        "Georgian": "ka",
        "German": "de",
        "Greeek": "el",
        "Greek (romanized)": "el-Latn",
        "Gujarati": "gu",
        "Haitian; Haitian Creole": "ht",
        "Hausa": "ha",
        "Hawaiian": "haw",
        "Hindi": "hi",
        "Hindi (romanized)": "hi-Latn",
        "Hmong, Mong": "hmn",
        "Hungarian": "hu",
        "Icelandic": "is",
        "Igbo": "ig",
        "Indonesian": "id",
        "Irish": "ga",
        "Italian": "it",
        "Japanese": "ja",
        "Japanese (romanized)": "ja-Latn",
        "Javanese": "jv",
        "Kannada": "kn",
        "Kazakh": "kk",
        "Korean": "ko",
        "Kurdish": "ku",
        "Kyrgyz": "ky",
        "Lao": "lo",
        "Latin": "la",
        "Latvian": "lv",
        "Lithuanian": "lt",
        "Luxembourgish; Letzeburgesch": "lb",
        "Macedonian": "mk",
        "Malagasy": "mg",
        "Malay": "ms",
        "Malayalam": "ml",
        "Maltese": "mt",
        "Maori": "mi",
        "Marathi": "mr",
        "Mongolian": "mn",
        "Nepali": "ne",
        "Norwegian": "no",
        "Nyanja": "ny",
        "Panjabi; Punjabi": "pa",
        "Persian": "fa",
        "Polish": "pl",
        "Portuguese": "pt",
        "Pushto; Pashto": "ps",
        "Romanian; Moldavian; Moldovan": "ro",
        "Russian": "ru",
        "Russian (romanized)": "ru-Latn",
        "Samoan": "sm",
        "Serbian": "sr",
        "Shona": "sn",
        "Sindhi": "sd",
        "Sinhala; Sinhalese": "si",
        "Slovak": "sk",
        "Slovenian": "sl",
        "Somali": "so",
        "Southern Sotho": "st",
        "Spanish": "es",
        "Sundanese": "su",
        "Swahili": "sw",
        "Swedish": "sv",
        "Tajik": "tg",
        "Tamil": "ta",
        "Telugu": "te",
        "Thai": "th",
        "Turkish": "tr",
        "Ukrainian": "uk",
        "Urdu": "ur",
        "Uzbek": "uz",
        "Vietnamese": "vi",
        "Welsh": "cy",
        "Western Frisian": "fy",
        "Xhosa": "xh",
        "Yiddish": "yi",
        "Yoruba": "yo",
        "Zulu": "zu",
        "former Hebrew": "iw",
    },
    "comet": {
        "Afrikaans": "af",
        "Albanian": "sq",
        "Amharic": "am",
        "Arabic": "ar",
        "Armenian": "hy",
        "Assamese": "as",
        "Azerbaijani": "az",
        "Bangla": "bn",
        "Basque": "eu",
        "Belarusian": "be",
        "Bosnian": "bs",
        "Breton": "br",
        "Bulgarian": "bg",
        "Burmese": "my",
        "Catalan; Valencian": "ca",
        "Central Khmer": "km",
        "Chinese": "zh",
        "Croatian": "hr",
        "Czech": "cs",
        "Danish": "da",
        "Dutch; Flemish": "nl",
        "English": "en",
        "Esperanto": "eo",
        "Estonian": "et",
        "Finnish": "fi",
        "French": "fr",
        "Gaelic; Scottish Gaelic": "gd",
        "Galician": "gl",
        "Georgian": "ka",
        "German": "de",
        "Greeek": "el",
        "Gujarati": "gu",
        "Hausa": "ha",
        "Hebrew": "he",
        "Hindi": "hi",
        "Hungarian": "hu",
        "Icelandic": "is",
        "Indonesian": "id",
        "Irish": "ga",
        "Italian": "it",
        "Japanese": "ja",
        "Javanese": "jv",
        "Kannada": "kn",
        "Kazakh": "kk",
        "Korean": "ko",
        "Kurdish": "ku",
        "Kyrgyz": "ky",
        "Lao": "lo",
        "Latin": "la",
        "Latvian": "lv",
        "Lithuanian": "lt",
        "Macedonian": "mk",
        "Malagasy": "mg",
        "Malay": "ms",
        "Malayalam": "ml",
        "Marathi": "mr",
        "Mongolian": "mn",
        "Nepali": "ne",
        "Norwegian": "no",
        "Oriya": "or",
        "Oromo": "om",
        "Panjabi; Punjabi": "pa",
        "Persian": "fa",
        "Polish": "pl",
        "Portuguese": "pt",
        "Pushto; Pashto": "ps",
        "Romanian; Moldavian; Moldovan": "ro",
        "Russian": "ru",
        "Sanskrit": "sa",
        "Serbian": "sr",
        "Sindhi": "sd",
        "Sinhala; Sinhalese": "si",
        "Slovak": "sk",
        "Slovenian": "sl",
        "Somali": "so",
        "Spanish": "es",
        "Sundanese": "su",
        "Swahili": "sw",
        "Swedish": "sv",
        "Tagalog": "tl",
        "Tamil": "ta",
        "Telugu": "te",
        "Thai": "th",
        "Turkish": "tr",
        "Ukrainian": "uk",
        "Urdu": "ur",
        "Uyghur": "ug",
        "Uzbek": "uz",
        "Vietnamese": "vi",
        "Welsh": "cy",
        "Western Frisian": "fy",
        "Xhosa": "xh",
        "Yiddish": "yi",
    },
}

SUPPORTED_LANGS_REV = {
    metric_name: {v: k for k, v in lang2key.items()} for metric_name, lang2key in SUPPORTED_LANGS.items()
}
